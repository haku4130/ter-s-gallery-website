services:
  db:
    image: postgres:14
    restart: always
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env

  backend:
    image: haku4130/ters-backend:latest
    restart: always
    command: >
      sh -c "
        uv run src/manage.py migrate &&
        uv run src/manage.py collectstatic --noinput &&
        uv run gunicorn config.wsgi:application --bind 0.0.0.0:8000 --chdir src
      "
    volumes:
      - static_volume:/app/src/collected_static
      - media_volume:/app/src/media
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  frontend:
    image: haku4130/ters-frontend:latest
    restart: always
    env_file:
      - .env
    environment:
      - NUXT_PUBLIC_API_BASE=${NUXT_PUBLIC_API_BASE}
    depends_on:
      - backend

  nginx:
    image: haku4130/ters-nginx:latest
    restart: always
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8001:80"
    depends_on:
      - backend
      - frontend

volumes:
  postgres_data:
  static_volume:
  media_volume:
